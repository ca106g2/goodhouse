/*
 * 頭部"城市"顯示選擇切換
 * @author      liangjilin@addcn.com
 * @updateTime  2019-03-01
 */

(function(){
	// 應用城市配置文件
	var region = [];

	region[0] = [
		{'id':0 , 'txt':'北部'  },
		{'id':1 , 'txt':'台北市'},
		{'id':3 , 'txt':'新北市'},
		{'id':6 , 'txt':'桃園市'},
		{'id':4 , 'txt':'新竹市'},
		{'id':5 , 'txt':'新竹縣'},		
		{'id':21, 'txt':'宜蘭縣'},
		{'id':2 , 'txt':'基隆市'}
	];

	region[1] = [
		{'id':0 , 'txt':'中部'  },
		{'id':8 , 'txt':'台中市'},
		{'id':10, 'txt':'彰化縣'},		
		{'id':14, 'txt':'雲林縣'},
		{'id':7 , 'txt':'苗栗縣'},
		{'id':11, 'txt':'南投縣'}
	];

	region[2] = [
		{'id':0 , 'txt':'南部'  },
		{'id':17, 'txt':'高雄市'},
		{'id':15, 'txt':'台南市'},				
		{'id':12, 'txt':'嘉義市'},
		{'id':13, 'txt':'嘉義縣'},
		{'id':19, 'txt':'屏東縣'}
	]

	region[3] = [
		{'id':0 , 'txt':'東部'  },
		{'id':22, 'txt':'台東縣'},
		{'id':23, 'txt':'花蓮縣'},
		{'id':24, 'txt':'澎湖縣'},
		{'id':25, 'txt':'金門縣'},
		{'id':26, 'txt':'連江縣'}
	];
	
	function addClass(obj, cls){
		var obj_class = obj.className,  // 获取 class 内容.
		blank = (obj_class != '') ? ' ' : ''; // 判断获取到的 class 是否为空, 如果不为空在前面加个'空格'.
		added = obj_class + blank + cls;  // 组合原来的 class 和需要添加的 class.
		obj.className = added;  // 替换原来的 class.
	}
	function removeClass(obj, cls){
		var obj_class = ' '+obj.className+' ';  // 获取 class 内容, 并在首尾各加一个空格. ex) 'abc    bcd' -> ' abc    bcd '
		obj_class = obj_class.replace(/(\s+)/gi, ' '),  // 将多余的空字符替换成一个空格. ex) ' abc    bcd ' -> ' abc bcd '
		removed = obj_class.replace(' '+cls+' ', ' ');  // 在原来的 class 替换掉首尾加了空格的 class. ex) ' abc bcd ' -> 'bcd '
		removed = removed.replace(/(^\s+)|(\s+$)/g, '');  // 去掉首尾空格. ex) 'bcd ' -> 'bcd'
		obj.className = removed;  // 替换原来的 class.
	}

	var areabox = function(options) {
		//areabox("options") 或者 new areabox("options")都可以使用areabox方法
		if(!(this instanceof areabox)){return new areabox(options)};
		// 参数合并 extend方法体在下面
		this.options = this.extend({
			id: null,
			style : null,
			event : 'mouseover',
			callback: null
		}, options);
		this.init();
		//初始化
	};
	areabox.prototype = {
		init: function () {
			this.event();
		},
		// 参数合并方法体
		extend: function (obj, obj2) {
			for (var key in obj2) {
				obj[key] = obj2[key];
			//    确保参数唯一
			}
			return obj
		},
		event: function () {

			var _this = document.getElementById(this.options.id); // 獲取dom對象

			// 创建切换县市框html
			_this.innerHTML = creatAreaboxHtml(this.options);

			// 显示方式
			if(this.options.event == 'mouseover'){
				onmouseout
				_this.addEventListener('mouseover', function() {
					showAreaBoxNew();
				})
				_this.addEventListener('mouseout', function() {
					hideAreaBoxNew();
				})
			}else{
				_this.addEventListener('click', function() {
					if(hasClass(_this, "active")){
						hideAreaBoxNew();
					}else{
						showAreaBoxNew();
					}   
				})
			}
			
			// 執行回調函數
			// 修復一個頁面初始化多個實例時重複綁定回調事件的bug
			var that = this
			_this.querySelectorAll('#areaBoxNew dl dd a').forEach(function(v,i) {
				v.addEventListener('click', function(event) {
					if(typeof that.options.callback == "function"){
						that.options.callback(event.target);
					}
				})
			})

			function hasClass(obj, cls){
				var obj_class = obj.className,//获取 class 内容.
				obj_class_lst = obj_class.split(/\s+/);//通过split空字符将cls转换成数组.
				x = 0;
				for(x in obj_class_lst) {
					if(obj_class_lst[x] == cls) {//循环数组, 判断是否包含cls
					return true;
					}
				}
				return false;
			}

			// 创建切换县市框html
			function creatAreaboxHtml (options) {

				var regionName = document.getElementById('hid_region').value

				var _html = '<a href="javascript:;" google-data-stat="頭部導航_縣市切換_1"><span class="areaTxt">' + regionName +
					'</span> <i class="fa fa-caret-down"></i></a>' +
					'<div class="areabox-wrapper '+ options.style +'" id="areaBoxNew"><div class="dropbox-arrow"></div>';

				region.forEach(function(value, key) {
					_html += '<dl class="clearfix"><dt>';
					value.forEach(function(v, k) {
						// 如果是0，指所处的位置
						if(v.id == 0){

							_html += v.txt + '</dt><dd>';

						}else{

							// 高亮熱門區域
							if(v.id == 1 || v.id == 3 || v.id == 6 || v.id == 8 || v.id == 17){
								var _active = 'active'
							}
							
							_html += '<a href="javascript:;" data-id="' + v.id + '" class="' + _active + '">' + v.txt + '</a>';
						}
					})

					_html += '</dd></dl>';

				});

				return _html += '</div>';
				
			}

			// 顯示選擇框
			function showAreaBoxNew () {
				addClass(_this, 'active');
				_this.getElementsByClassName('areabox-wrapper')[0].style.display = 'block';
			}

			// 隱藏選擇框
			function hideAreaBoxNew () {
				removeClass(_this, 'active');
				_this.getElementsByClassName('areabox-wrapper')[0].style.display = 'none';
			}
			
			// // 方法结束的回调
			// this.options.callback && this.options.callback();
		}
	};

	// 原放在頭部頁面執行，解決社區等頁面報錯的問題
	areabox({ // 地區初始化及回調
		id: 'areaSelect', 
		callback:function(obj){
	
			document.getElementById('areaSelect').querySelector('a>.areaTxt').innerHTML = obj.innerText;
	
			// 設置新的cookie
			jsCookie('urlJumpIp',obj.getAttribute("data-id"),{expires: 30,path: '/',domain:'591.com.tw'});
			// 去掉hash
			window.location.hash = ''
	
			// 鏈接參數重置&頁面刷新
			window.location = window.location.origin + window.location.pathname + '?rid=' + obj.getAttribute("data-id")
	
			// 頁面刷新
			// window.location.reload();
		}
	})
	
	// 導航子菜單顯示
	document.querySelectorAll('.nav-list li').forEach(function(value, index) {
		var subNav = value.getElementsByClassName('sub-nav')
		value.addEventListener('mouseover', function() {
			addClass(value, 'active');
			if (subNav.length > 0) {
				subNav[0].style.display = 'block';
			}
		});
		value.addEventListener('mouseout', function() {
			removeClass(value, 'active');
			if (subNav.length > 0) {
				subNav[0].style.display = 'none';
			}
		});
	});
	
	// 狀態區域下拉
	document.querySelectorAll('.login-status .dropMenu').forEach(function(value, index) {
		var dropbox = value.getElementsByClassName('dropbox')
		value.addEventListener('mouseover', function() {
			addClass(value, 'active');
			if (dropbox.length > 0) {
				dropbox[0].style.display = 'block';
			}
		});
		value.addEventListener('mouseout', function() {
			removeClass(value, 'active');
			if (dropbox.length > 0) {
				dropbox[0].style.display = 'none';
			}
		});
	});
	
	// 獲取登錄提示展示次數
	var _val = jsCookie("loginNoticeNumber") ? jsCookie("loginNoticeNumber") : 0;
	
	var loginNotice = document.getElementsByClassName('login-notice')

	// 點擊關閉時同時寫入登錄提示次數cookie和展示cookie
	if (loginNotice.length > 0) {
		//登錄提示框是否展示，超過三次就不再展示
		if(!jsCookie("loginNoticeStatus") && _val <3){
			loginNotice[0].style.display = 'block';
		}

		loginNotice[0].addEventListener('click', function() {
	
			loginNotice[0].style.display = 'none';
		
			// 控制是否展示
			jsCookie("loginNoticeStatus",1,{expires: 1,path: '/',domain:'591.com.tw'})
		
			// 打入展示次數
			jsCookie("loginNoticeNumber",parseInt(_val) + 1,{expires: 365,path: '/',domain:'591.com.tw'})
		});
	}

}())